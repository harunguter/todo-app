services:
  nginx:
    image: nginx:1.21.6
    container_name: nginx
    hostname: nginx
    ports:
      - 80:80
    restart: unless-stopped
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - network

  frontend:
    image: frontend:1.0.0
    build:
      context: frontend
      dockerfile: ./Dockerfile
    container_name: frontend
    hostname: frontend
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - network

  backend:
    image: backend:1.0.0
    build:
      context: backend
      dockerfile: ./Dockerfile
    container_name: backend
    hostname: backend
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - 3001:3001
    networks:
      - network

  database:
    image: mongo:4.4
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: pZ5FbOZ50GkZ
    ports:
      - 27017:27017
    container_name: database
    hostname: database
    restart: unless-stopped
    volumes:
      - mongodb:/data/db
    networks:
      - network

volumes:
  mongodb:
    driver: local

networks:
  network:
    driver: bridge
